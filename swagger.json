{
  "swagger": "2.0",
  "info": {
    "description": "This is a exemlpo server API BossaBox.",
    "version": "1.0.0",
    "title": "API teste BossaBox - VUTT",
    "contact": {
      "email": "rafael@aproximma.com.br"
    }
  },
  "host": "aproximma-vuttr-api.herokuapp.com",
  "tags": [
    {
      "name": "tools",
      "description": "Information about the Tools"
    },
    {
      "name": "auth",
      "description": "Login e registration"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/tools": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "Returns a list of tools.",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "type": "string",
            "description": "Full name or part of the tag. Ex: node"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ToolsResponse"
              }
            }
          },
          "500": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Register a tool.",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/ToolsResponse"
            }
          },
          "422": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tools/{id}": {
      "delete": {
        "tags": [
          "tools"
        ],
        "summary": "Remove a tool.",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID (ObjectId) of tool to remove",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "422": {
            "description": "Error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs in and returns the authentication cookie",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON object containing the email and password.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ilogin"
            }
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            },
            "description": "Successfully authenticated. The JWT is returned in a cookie named `Authorization`. You need to include this cookie in subsequent requests.\n",
            "headers": {
              "Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Authorization=abcde12345; HttpOnly"
                }
              }
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "UNAUTHORIZED"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "FORBIDDEN"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON object register user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IUser"
            }
          }
        ],
        "security": [],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            },
            "description": "Successfully created new User. The JWT is returned in a cookie named `Authorization`. You need to include this cookie in subsequent requests.\n",
            "headers": {
              "Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Authorization=abcde12345; HttpOnly"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ToolsRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ToolsResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Ilogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "IUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RegisterResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
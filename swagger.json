{
  "openapi": "3.0.0",
  "info": {
    "description": "This is a exemlpo server API BossaBox. UHULL",
    "version": "1.0.0",
    "title": "API teste BossaBox - VUTT",
    "contact": {
      "email": "rafael@aproximma.com.br"
    }
  },
  "servers": [
    {
      "url": "https://aproximma-vuttr-api.herokuapp.com"
    }
  ],
  "tags": [
    {
      "name": "tools",
      "description": "Information about the Tools"
    },
    {
      "name": "auth",
      "description": "Login e registration"
    }
  ],
  "paths": {
    "/tools": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "Returns a list of tools.",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            },
            "description": "Full name or part of the tag. Ex: node"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToolsResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "Register a tool.",
        "security": [],
        "requestBody": {
          "description": "Pet object that needs to be added to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tools/{id}": {
      "delete": {
        "tags": [
          "tools"
        ],
        "summary": "Remove a tool.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID (ObjectId) of tool to remove",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT"
          },
          "422": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login and returns the authentication cookie",
        "requestBody": {
          "description": "A JSON object containing the email and password.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ilogin"
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            },
            "description": "Successfully authenticated. The JWT is returned in a cookie named `Authorization`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Authorization=abcde12345; HttpOnly; Max-Age=3600"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "UNAUTHORIZED"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "UNAUTHORIZED"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "FORBIDDEN"
          }
        }
      }
    },
    "/auth/registration": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "requestBody": {
          "description": "A JSON object register user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            },
            "description": "Successfully created new User. The JWT is returned in a cookie named `Authorization`. You need to include this cookie in subsequent requests.\n",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Authorization=abcde12345; HttpOnly"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "requestBody": {
          "description": "A JSON object register user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Authorization"
      }
    },
    "schemas": {
      "ToolsRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ToolsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Ilogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "IUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}